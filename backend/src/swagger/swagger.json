{
    "openapi": "3.0.1",
    "info": {
        "title": "NE Parking Management System 2025",
        "description": "API documentation for the NE Parking Management System built with microservices architecture",
        "version": "1.0.0",
        "contact": {
            "name": "XYZ LTD",
            "email": "contact@xyzltd.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "http://localhost:8080/api/v1"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "summary": "Login a user",
                "description": "Authenticate a user with JWT token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Create a new user account with specified role (USER, ADMIN, ATTENDANT)",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "summary": "Get user profile",
                "description": "Get current authenticated user profile details",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get all users (Admin only)",
                "description": "Get a list of all users in the system",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                }
            }
        },
        "/users/{id}/role": {
            "patch": {
                "summary": "Update user role (Admin only)",
                "description": "Update a user's role to USER, ADMIN, or ATTENDANT",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": ["USER", "ADMIN", "ATTENDANT"],
                                        "example": "ATTENDANT"
                                    }
                                },
                                "required": ["role"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/parking/slots": {
            "get": {
                "summary": "Get all parking slots",
                "tags": [
                    "Parking"
                ],
                "parameters": [
                    {
                        "name": "floor",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "isAvailable",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of parking slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingSlotResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new parking slot (Admin only)",
                "tags": [
                    "Parking"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingSlot"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking slot created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    }
                }
            }
        },
        "/parking/slots/{id}": {
            "get": {
                "summary": "Get parking slot by ID",
                "tags": [
                    "Parking"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking slot details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking slot not found"
                    }
                }
            },
            "patch": {
                "summary": "Update a parking slot",
                "tags": [
                    "Parking"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingSlotUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parking slot updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized"
                    }
                }
            }
        },
        "/vehicles": {
            "get": {
                "summary": "Get all vehicles for current user",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Register a new vehicle",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Plate number already exists"
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "get": {
                "summary": "Get vehicle by ID",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a vehicle",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vehicle deleted"
                    },
                    "400": {
                        "description": "Bad request - Vehicle has active bookings"
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "summary": "Get all bookings for current user",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new booking",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Booking"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Parking slot not available"
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "summary": "Get booking by ID",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            },
            "patch": {
                "summary": "Extend booking duration",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtendBooking"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking extended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Cannot extend booking"
                    }
                }
            },
            "delete": {
                "summary": "Cancel a booking",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Cannot cancel booking"
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "summary": "Get all payments for current user",
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Process a payment",
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Payment failed"
                    }
                }
            }
        },
        "/parking": {
            "get": {
                "summary": "Get all parking locations",
                "description": "Retrieve a list of all parking locations",
                "tags": [
                    "Parking Locations"
                ],
                "responses": {
                    "200": {
                        "description": "List of parking locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingLocationResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/parking/locations": {
            "post": {
                "summary": "Create a new parking location (Admin only)",
                "description": "Register a new parking location with details like code, name, spaces, location, and fee",
                "tags": [
                    "Parking Locations"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingLocation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking location created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Code already exists"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                }
            }
        },
        "/parking/locations/{id}": {
            "get": {
                "summary": "Get parking location by ID",
                "description": "Retrieve details of a specific parking location",
                "tags": [
                    "Parking Locations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking location details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingLocationResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking location not found"
                    }
                }
            },
            "put": {
                "summary": "Update a parking location (Admin only)",
                "description": "Update details of a specific parking location",
                "tags": [
                    "Parking Locations"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingLocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parking location updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Code already exists"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "404": {
                        "description": "Parking location not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a parking location (Admin only)",
                "description": "Delete a specific parking location",
                "tags": [
                    "Parking Locations"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking location deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Cannot delete with active entries"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "404": {
                        "description": "Parking location not found"
                    }
                }
            }
        },
        "/parking/locations/code/{code}": {
            "get": {
                "summary": "Get parking location by code",
                "description": "Retrieve details of a specific parking location by its code",
                "tags": [
                    "Parking Locations"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking location details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingLocationResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking location not found"
                    }
                }
            }
        },
        "/parking/activities/entry": {
            "post": {
                "summary": "Record vehicle entry (Attendant/Admin only)",
                "description": "Record a vehicle entering a parking location",
                "tags": [
                    "Parking Activities"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle entry recorded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingActivityResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - No available spaces or Vehicle already parked"
                    },
                    "403": {
                        "description": "Forbidden - Admin/Attendant access required"
                    },
                    "404": {
                        "description": "Vehicle or parking location not found"
                    }
                }
            }
        },
        "/parking/activities/{id}/exit": {
            "post": {
                "summary": "Record vehicle exit (Attendant/Admin only)",
                "description": "Record a vehicle exiting a parking location, calculate duration and fees",
                "tags": [
                    "Parking Activities"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle exit recorded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingActivityResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Vehicle has already exited"
                    },
                    "403": {
                        "description": "Forbidden - Admin/Attendant access required"
                    },
                    "404": {
                        "description": "Parking activity not found"
                    }
                }
            }
        },
        "/parking/activities/{id}": {
            "get": {
                "summary": "Get parking activity details",
                "description": "Get details of a specific parking activity record",
                "tags": [
                    "Parking Activities"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking activity details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingActivityResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking activity not found"
                    }
                }
            }
        },
        "/parking/activities/active": {
            "get": {
                "summary": "Get all active vehicles (Attendant/Admin only)",
                "description": "Get a list of all vehicles currently parked",
                "tags": [
                    "Parking Activities"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of active parking activities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingActivityResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin/Attendant access required"
                    }
                }
            }
        },
        "/parking/activities/{id}/ticket": {
            "get": {
                "summary": "Generate entry ticket (Attendant/Admin only)",
                "description": "Generate a ticket for a vehicle entering a parking location",
                "tags": [
                    "Tickets & Bills"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entry ticket generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntryTicket"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin/Attendant access required"
                    },
                    "404": {
                        "description": "Parking activity not found"
                    }
                }
            }
        },
        "/parking/activities/{id}/summary": {
            "get": {
                "summary": "Generate parking summary/bill (Attendant/Admin only)",
                "description": "Generate a summary or bill for a vehicle's parking stay",
                "tags": [
                    "Tickets & Bills"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking summary generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSummary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin/Attendant access required"
                    },
                    "404": {
                        "description": "Parking activity not found"
                    }
                }
            }
        },
        "/parking/reports/entries": {
            "get": {
                "summary": "Generate report on vehicle entries (Admin only)",
                "description": "Get a report of all vehicles that entered parking locations between two dates",
                "tags": [
                    "Reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle entries report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingActivityResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid date range"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                }
            }
        },
        "/parking/reports/exits": {
            "get": {
                "summary": "Generate report on vehicle exits with charges (Admin only)",
                "description": "Get a report of all vehicles that exited parking locations between two dates with charge amounts",
                "tags": [
                    "Reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle exits report with charges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingActivityResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid date range"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "required": ["email", "password"]
            },
            "User": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["USER", "ADMIN", "ATTENDANT"],
                        "default": "USER",
                        "example": "USER"
                    }
                },
                "required": ["firstName", "lastName", "email", "password"]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "USER"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuthResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Login successful"
                    },
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "data": {
                        "$ref": "#/components/schemas/UserResponse"
                    }
                }
            },
            "ParkingSlot": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "example": "A-101"
                    },
                    "floor": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": ["REGULAR", "COMPACT", "HANDICAP", "ELECTRIC"],
                        "example": "REGULAR"
                    }
                },
                "required": ["number", "floor", "type"]
            },
            "ParkingSlotResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "number": {
                        "type": "string",
                        "example": "A-101"
                    },
                    "floor": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "REGULAR"
                    },
                    "isAvailable": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ParkingSlotUpdate": {
                "type": "object",
                "properties": {
                    "isAvailable": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "plateNumber": {
                        "type": "string",
                        "example": "RAA123A"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["CAR", "MOTORCYCLE", "TRUCK", "VAN"],
                        "example": "CAR"
                    }
                },
                "required": ["plateNumber", "type"]
            },
            "VehicleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "RAA123A"
                    },
                    "type": {
                        "type": "string",
                        "example": "CAR"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Booking": {
                "type": "object",
                "properties": {
                    "parkingSlotId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "vehicleId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "durationHours": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 2
                    }
                },
                "required": ["parkingSlotId", "vehicleId", "startTime", "durationHours"]
            },
            "ExtendBooking": {
                "type": "object",
                "properties": {
                    "additionalHours": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    }
                },
                "required": ["additionalHours"]
            },
            "BookingResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "parkingSlot": {
                        "$ref": "#/components/schemas/ParkingSlotResponse"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/VehicleResponse"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T10:00:00Z"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["ACTIVE", "COMPLETED", "CANCELLED", "OVERSTAY"],
                        "example": "ACTIVE"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Payment": {
                "type": "object",
                "properties": {
                    "bookingId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0,
                        "example": 5000
                    },
                    "method": {
                        "type": "string",
                        "enum": ["CASH", "CARD", "MOBILE"],
                        "example": "CARD"
                    }
                },
                "required": ["bookingId", "amount", "method"]
            },
            "PaymentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "booking": {
                        "$ref": "#/components/schemas/BookingResponse"
                    },
                    "amount": {
                        "type": "number",
                        "example": 5000
                    },
                    "method": {
                        "type": "string",
                        "example": "CARD"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["PENDING", "COMPLETED", "FAILED", "REFUNDED"],
                        "example": "COMPLETED"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ParkingLocation": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 3,
                        "example": "P001"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "example": "Main Parking"
                    },
                    "location": {
                        "type": "string",
                        "minLength": 3,
                        "example": "Kigali City Center"
                    },
                    "totalSpaces": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 100
                    },
                    "feePerHour": {
                        "type": "number",
                        "minimum": 0,
                        "example": 500
                    }
                },
                "required": ["code", "name", "location", "totalSpaces", "feePerHour"]
            },
            "ParkingLocationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "code": {
                        "type": "string",
                        "example": "P001"
                    },
                    "name": {
                        "type": "string",
                        "example": "Main Parking"
                    },
                    "location": {
                        "type": "string",
                        "example": "Kigali City Center"
                    },
                    "totalSpaces": {
                        "type": "integer",
                        "example": 100
                    },
                    "availableSpaces": {
                        "type": "integer",
                        "example": 75
                    },
                    "feePerHour": {
                        "type": "number",
                        "example": 500
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ParkingEntry": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "parkingId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "userId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    }
                },
                "required": ["vehicleId", "parkingId", "userId"]
            },
            "ParkingActivityResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/VehicleResponse"
                    },
                    "parking": {
                        "$ref": "#/components/schemas/ParkingLocationResponse"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "ticketNumber": {
                        "type": "string",
                        "example": "TICKET-12AB34CD"
                    },
                    "entryDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "exitDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T10:00:00Z"
                    },
                    "duration": {
                        "type": "number",
                        "example": 2.0
                    },
                    "status": {
                        "type": "string",
                        "enum": ["ACTIVE", "COMPLETED"],
                        "example": "COMPLETED"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "EntryTicket": {
                "type": "object",
                "properties": {
                    "ticketNumber": {
                        "type": "string",
                        "example": "TICKET-12AB34CD"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "RAA123A"
                    },
                    "vehicleType": {
                        "type": "string",
                        "example": "CAR"
                    },
                    "entryDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "parkingName": {
                        "type": "string",
                        "example": "Main Parking"
                    },
                    "parkingCode": {
                        "type": "string",
                        "example": "P001"
                    },
                    "location": {
                        "type": "string",
                        "example": "Kigali City Center"
                    },
                    "feePerHour": {
                        "type": "number",
                        "example": 500
                    }
                }
            },
            "ParkingSummary": {
                "type": "object",
                "properties": {
                    "ticketNumber": {
                        "type": "string",
                        "example": "TICKET-12AB34CD"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "RAA123A"
                    },
                    "vehicleType": {
                        "type": "string",
                        "example": "CAR"
                    },
                    "entryDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "exitDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T10:00:00Z"
                    },
                    "parkingName": {
                        "type": "string",
                        "example": "Main Parking"
                    },
                    "parkingCode": {
                        "type": "string",
                        "example": "P001"
                    },
                    "duration": {
                        "type": "string",
                        "example": "2.00 hours"
                    },
                    "feePerHour": {
                        "type": "number",
                        "example": 500
                    },
                    "isEstimate": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "DateRange": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T00:00:00Z"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-30T23:59:59Z"
                    }
                },
                "required": ["startDate", "endDate"]
            }
        }
    }
}